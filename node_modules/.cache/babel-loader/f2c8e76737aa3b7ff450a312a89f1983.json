{"ast":null,"code":"import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { __assign, __spreadArray } from 'tslib';\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\n\nfunction fromRef(ref, event) {\n  return new Observable(function (subscriber) {\n    var fn = ref.on(event, function (snapshot, prevKey) {\n      subscriber.next({\n        snapshot: snapshot,\n        prevKey: prevKey,\n        event: event\n      });\n    }, subscriber.error.bind(subscriber));\n    return {\n      unsubscribe: function () {\n        ref.off(event, fn);\n      }\n    };\n  }).pipe( // Ensures subscribe on observable is async. This handles\n  // a quirk in the SDK where on/once callbacks can happen\n  // synchronously.\n  delay(0));\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ListenEvent;\n\n(function (ListenEvent) {\n  /* eslint-disable no-unused-vars */\n  ListenEvent[\"added\"] = \"child_added\";\n  ListenEvent[\"removed\"] = \"child_removed\";\n  ListenEvent[\"changed\"] = \"child_changed\";\n  ListenEvent[\"moved\"] = \"child_moved\";\n  ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\n\n\nfunction validateEventsArray(events) {\n  if (events == null || events.length === 0) {\n    events = [ListenEvent.added, ListenEvent.removed, ListenEvent.changed, ListenEvent.moved];\n  }\n\n  return events;\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Get the snapshot changes of an object\n * @param query\n */\n\n\nfunction object(query) {\n  return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\n\n\nfunction objectVal(query, keyField) {\n  return fromRef(query, ListenEvent.value).pipe(map(function (change) {\n    return changeToData(change, keyField);\n  }));\n}\n\nfunction changeToData(change, keyField) {\n  var _a;\n\n  var val = change.snapshot.val(); // match the behavior of the JS SDK when the snapshot doesn't exist\n\n  if (!change.snapshot.exists()) {\n    return val;\n  } // val can be a primitive type\n\n\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return __assign(__assign({}, val), keyField ? (_a = {}, _a[keyField] = change.snapshot.key, _a) : null);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction stateChanges(query, events) {\n  events = validateEventsArray(events);\n  var childEvent$ = events.map(function (event) {\n    return fromRef(query, event);\n  });\n  return merge.apply(void 0, childEvent$);\n}\n\nfunction fromOnce(query) {\n  return from(query.once(ListenEvent.value)).pipe(map(function (snapshot) {\n    var event = ListenEvent.value;\n    return {\n      snapshot: snapshot,\n      prevKey: null,\n      event: event\n    };\n  }));\n}\n\nfunction list(query, events) {\n  var eventsList = validateEventsArray(events);\n  return fromOnce(query).pipe(switchMap(function (change) {\n    // in case the list doesn't exist, match the RTDB SDK's default behavior\n    if (!change.snapshot.exists()) {\n      return of(change.snapshot.val());\n    }\n\n    var childEvent$ = [of(change)];\n\n    for (var _i = 0, eventsList_1 = eventsList; _i < eventsList_1.length; _i++) {\n      var event_1 = eventsList_1[_i];\n      childEvent$.push(fromRef(query, event_1));\n    }\n\n    return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\n\n\nfunction listVal(query, keyField) {\n  return list(query).pipe(map(function (arr) {\n    // result can be null if query returns no data\n    if (arr === null) {\n      return arr;\n    }\n\n    return arr.map(function (change) {\n      return changeToData(change, keyField);\n    });\n  }));\n}\n\nfunction positionFor(changes, key) {\n  var len = changes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (changes[i].snapshot.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (prevKey == null) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, change) {\n  var snapshot = change.snapshot,\n      prevKey = change.prevKey,\n      event = change.event;\n  var key = snapshot.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n\n  switch (event) {\n    case ListenEvent.value:\n      if (change.snapshot && change.snapshot.exists()) {\n        var prevKey_1 = null;\n        change.snapshot.forEach(function (snapshot) {\n          var action = {\n            snapshot: snapshot,\n            event: ListenEvent.value,\n            prevKey: prevKey_1\n          };\n          prevKey_1 = snapshot.key;\n          current = __spreadArray(__spreadArray([], current), [action]);\n          return false;\n        });\n      }\n\n      return current;\n\n    case ListenEvent.added:\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        var previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.snapshot.key || null) !== prevKey) {\n          current = current.filter(function (x) {\n            return x.snapshot.key !== snapshot.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, change);\n        }\n      } else if (prevKey == null) {\n        return __spreadArray([change], current);\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, change);\n      }\n\n      return current;\n\n    case ListenEvent.removed:\n      return current.filter(function (x) {\n        return x.snapshot.key !== snapshot.key;\n      });\n\n    case ListenEvent.changed:\n      return current.map(function (x) {\n        return x.snapshot.key === key ? change : x;\n      });\n\n    case ListenEvent.moved:\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n    // default will also remove null results\n\n    default:\n      return current;\n  }\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction auditTrail(query, events) {\n  var auditTrail$ = stateChanges(query, events).pipe(scan(function (current, changes) {\n    return __spreadArray(__spreadArray([], current), [changes]);\n  }, []));\n  return waitForLoaded(query, auditTrail$);\n}\n\nfunction loadedData(query) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n    // Store the last key in the data set\n    var lastKeyToLoad; // Loop through loaded dataset to find the last key\n\n    data.snapshot.forEach(function (child) {\n      lastKeyToLoad = child.key;\n      return false;\n    }); // return data set and the current last key loaded\n\n    return {\n      data: data,\n      lastKeyToLoad: lastKeyToLoad\n    };\n  }));\n}\n\nfunction waitForLoaded(query, snap$) {\n  var loaded$ = loadedData(query);\n  return loaded$.pipe(withLatestFrom(snap$), // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(function (_a) {\n    var loaded = _a[0],\n        changes = _a[1]; // Store the last key in the data set\n\n    var lastKeyToLoad = loaded.lastKeyToLoad; // Store all child keys loaded at this point\n\n    var loadedKeys = changes.map(function (change) {\n      return change.snapshot.key;\n    });\n    return {\n      changes: changes,\n      lastKeyToLoad: lastKeyToLoad,\n      loadedKeys: loadedKeys\n    };\n  }), // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(function (meta) {\n    return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n  }), // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(function (meta) {\n    return meta.changes;\n  }));\n}\n\nexport { ListenEvent, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };","map":{"version":3,"mappings":"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","names":["fromRef","ref","event","Observable","subscriber","fn","on","snapshot","prevKey","next","error","bind","unsubscribe","off","pipe","delay","ListenEvent","validateEventsArray","events","length","added","removed","changed","moved","object","query","value","objectVal","keyField","map","change","changeToData","_a","val","exists","__assign","key","stateChanges","childEvent$","merge","apply","fromOnce","from","once","list","eventsList","switchMap","of","_i","eventsList_1","event_1","push","scan","buildView","distinctUntilChanged","listVal","arr","positionFor","changes","len","i","positionAfter","current","currentKeyPosition","afterPreviousKeyPosition","undefined","prevKey_1","forEach","action","__spreadArray","previous","filter","x","splice","slice","data","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","snap$","loaded$","withLatestFrom","loaded","loadedKeys","skipWhile","meta","indexOf"],"sources":["../../database/fromRef.ts","../../database/interfaces.ts","../../database/utils.ts","../../database/object/index.ts","../../database/list/index.ts","../../database/list/audit-trail.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nexport function fromRef(ref, event) {\n    return new Observable(function (subscriber) {\n        var fn = ref.on(event, function (snapshot, prevKey) {\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey, event: event });\n        }, subscriber.error.bind(subscriber));\n        return {\n            unsubscribe: function () {\n                ref.off(event, fn);\n            },\n        };\n    }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ListenEvent;\n(function (ListenEvent) {\n    /* eslint-disable no-unused-vars */\n    ListenEvent[\"added\"] = \"child_added\";\n    ListenEvent[\"removed\"] = \"child_removed\";\n    ListenEvent[\"changed\"] = \"child_changed\";\n    ListenEvent[\"moved\"] = \"child_moved\";\n    ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ListenEvent } from './interfaces';\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nexport function validateEventsArray(events) {\n    if (events == null || events.length === 0) {\n        events = [\n            ListenEvent.added,\n            ListenEvent.removed,\n            ListenEvent.changed,\n            ListenEvent.moved,\n        ];\n    }\n    return events;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { map } from 'rxjs/operators';\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nexport function object(query) {\n    return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function objectVal(query, keyField) {\n    return fromRef(query, ListenEvent.value).pipe(map(function (change) { return changeToData(change, keyField); }));\n}\nexport function changeToData(change, keyField) {\n    var _a;\n    var val = change.snapshot.val();\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    if (!change.snapshot.exists()) {\n        return val;\n    }\n    // val can be a primitive type\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, val), (keyField ? (_a = {}, _a[keyField] = change.snapshot.key, _a) : null));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __spreadArray } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { of, merge, from } from 'rxjs';\nimport { validateEventsArray } from '../utils';\nimport { fromRef } from '../fromRef';\nimport { switchMap, scan, distinctUntilChanged, map } from 'rxjs/operators';\nimport { changeToData } from '../object';\nexport function stateChanges(query, events) {\n    events = validateEventsArray(events);\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return merge.apply(void 0, childEvent$);\n}\nfunction fromOnce(query) {\n    return from(query.once(ListenEvent.value)).pipe(map(function (snapshot) {\n        var event = ListenEvent.value;\n        return { snapshot: snapshot, prevKey: null, event: event };\n    }));\n}\nexport function list(query, events) {\n    var eventsList = validateEventsArray(events);\n    return fromOnce(query).pipe(switchMap(function (change) {\n        // in case the list doesn't exist, match the RTDB SDK's default behavior\n        if (!change.snapshot.exists()) {\n            return of(change.snapshot.val());\n        }\n        var childEvent$ = [of(change)];\n        for (var _i = 0, eventsList_1 = eventsList; _i < eventsList_1.length; _i++) {\n            var event_1 = eventsList_1[_i];\n            childEvent$.push(fromRef(query, event_1));\n        }\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function listVal(query, keyField) {\n    return list(query).pipe(map(function (arr) {\n        // result can be null if query returns no data\n        if (arr === null) {\n            return arr;\n        }\n        return arr.map(function (change) { return changeToData(change, keyField); });\n    }));\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].snapshot.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (prevKey == null) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, change) {\n    var snapshot = change.snapshot, prevKey = change.prevKey, event = change.event;\n    var key = snapshot.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n    switch (event) {\n        case ListenEvent.value:\n            if (change.snapshot && change.snapshot.exists()) {\n                var prevKey_1 = null;\n                change.snapshot.forEach(function (snapshot) {\n                    var action = {\n                        snapshot: snapshot,\n                        event: ListenEvent.value,\n                        prevKey: prevKey_1,\n                    };\n                    prevKey_1 = snapshot.key;\n                    current = __spreadArray(__spreadArray([], current), [action]);\n                    return false;\n                });\n            }\n            return current;\n        case ListenEvent.added:\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                var previous = current[currentKeyPosition - 1];\n                if (((previous && previous.snapshot.key) || null) !== prevKey) {\n                    current = current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n                    current.splice(afterPreviousKeyPosition, 0, change);\n                }\n            }\n            else if (prevKey == null) {\n                return __spreadArray([change], current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, change);\n            }\n            return current;\n        case ListenEvent.removed:\n            return current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n        case ListenEvent.changed:\n            return current.map(function (x) { return (x.snapshot.key === key ? change : x); });\n        case ListenEvent.moved:\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __spreadArray } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { map, withLatestFrom, scan, skipWhile } from 'rxjs/operators';\nimport { stateChanges } from './index';\nexport function auditTrail(query, events) {\n    var auditTrail$ = stateChanges(query, events).pipe(scan(function (current, changes) { return __spreadArray(__spreadArray([], current), [changes]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n        // Store the last key in the data set\n        var lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.snapshot.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, snap$) {\n    var loaded$ = loadedData(query);\n    return loaded$.pipe(withLatestFrom(snap$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(function (_a) {\n        var loaded = _a[0], changes = _a[1];\n        // Store the last key in the data set\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        var loadedKeys = changes.map(function (change) { return change.snapshot.key; });\n        return { changes: changes, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(function (meta) {\n        return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n    }), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(function (meta) { return meta.changes; }));\n}\n"]},"metadata":{},"sourceType":"module"}