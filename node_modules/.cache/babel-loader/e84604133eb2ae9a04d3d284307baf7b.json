{"ast":null,"code":"var _jsxFileName = \"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/ContactForm/ContactForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { chooseName, chooseEmail, chooseAddress, choosePhone } from '../../redux/slices/RootSlice';\nimport { Input } from '../SharedComponents/Input';\nimport { Button } from '@material-ui/core';\nimport { server_calls } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = props => {\n  _s();\n\n  const dispatch = useDispatch(); // This is a Redux-specific hook that updates the store\n\n  const store = useStore();\n  const name = useSelector(state => state.name);\n  const {\n    register,\n    handleSubmit\n  } = useForm({});\n\n  const onSubmit = (data, event) => {\n    console.log(props.id); // The ! is for strictly typed Typescript stuff\n\n    if (props.id) {\n      server_calls.update(props.id, data);\n      console.log(`Updated:${data} ${props.id}`);\n      console.log(data);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n      event.target.reset();\n    } else {\n      // Dispatch basically updates our state / Redux store\n      dispatch(chooseName(data.name));\n      dispatch(chooseEmail(data.email));\n      dispatch(choosePhone(data.phone_number));\n      dispatch(chooseAddress(data.address));\n      server_calls.create(store.getState());\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Contact Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('name'),\n          name: \"name\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('email'),\n          name: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone_number\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('phone_number'),\n          name: \"phone_number\",\n          placeholder: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, { ...register('address'),\n          name: \"address\",\n          placeholder: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"EmQzK4vdedVdK2V0yGG9vEyiseY=\", false, function () {\n  return [useDispatch, useStore, useSelector, useForm];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useDispatch","useSelector","useStore","useForm","chooseName","chooseEmail","chooseAddress","choosePhone","Input","Button","server_calls","ContactForm","props","dispatch","store","name","state","register","handleSubmit","onSubmit","data","event","console","log","id","update","setTimeout","window","location","reload","target","reset","email","phone_number","address","create","getState"],"sources":["/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/ContactForm/ContactForm.tsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { chooseName, chooseEmail, chooseAddress, choosePhone } from '../../redux/slices/RootSlice';\nimport { Input } from '../SharedComponents/Input';\nimport { Button } from '@material-ui/core';\n\nimport { server_calls } from '../../api';\n\ninterface ContactFormProps {\n    id?:string;\n    data?:{}\n}\n\ninterface ContactState {\n    name: string;\n    email: string;\n    address: string;\n    phone_number: string;\n}\n\nexport const ContactForm = (props:ContactFormProps) => {\n\n  const dispatch = useDispatch(); // This is a Redux-specific hook that updates the store\n  const store = useStore();\n  const name = useSelector<ContactState>(state => state.name);\n  const { register, handleSubmit } = useForm({ })\n\n  const onSubmit = (data:any, event:any) => {\n      console.log(props.id)\n      // The ! is for strictly typed Typescript stuff\n      if(props.id!){\n          server_calls.update(props.id!, data);\n          console.log(`Updated:${data} ${props.id}`);\n          console.log(data);\n          setTimeout( () => {window.location.reload()}, 1000);\n          event.target.reset();\n      } else {\n          // Dispatch basically updates our state / Redux store\n          dispatch(chooseName(data.name));\n          dispatch(chooseEmail(data.email));\n          dispatch(choosePhone(data.phone_number));\n          dispatch(chooseAddress(data.address));\n          server_calls.create(store.getState());\n          setTimeout( () => {window.location.reload()}, 1000)\n      }\n    }\n    return (\n        <div>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n                <div>\n                    <label htmlFor=\"name\">Contact Name</label>\n                    <Input {...register('name')} name=\"name\" placeholder='Name'/>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <Input {...register('email')} name=\"email\" placeholder='Email'/>\n                </div>\n                <div>\n                    <label htmlFor=\"phone_number\">Phone Number</label>\n                    <Input {...register('phone_number')} name=\"phone_number\" placeholder='Phone Number'/>\n                </div>\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <Input {...register('address')} name=\"address\" placeholder='Address'/>\n                </div>\n                <Button type='submit'>Submit</Button>\n            </form>\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,aAAnD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,WAAjD,QAAoE,8BAApE;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,YAAT,QAA6B,WAA7B;;AAcA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAA4B;EAAA;;EAErD,MAAMC,QAAQ,GAAGb,WAAW,EAA5B,CAFqD,CAErB;;EAChC,MAAMc,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAMa,IAAI,GAAGd,WAAW,CAAee,KAAK,IAAIA,KAAK,CAACD,IAA9B,CAAxB;EACA,MAAM;IAAEE,QAAF;IAAYC;EAAZ,IAA6Bf,OAAO,CAAC,EAAD,CAA1C;;EAEA,MAAMgB,QAAQ,GAAG,CAACC,IAAD,EAAWC,KAAX,KAAyB;IACtCC,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,EAAlB,EADsC,CAEtC;;IACA,IAAGZ,KAAK,CAACY,EAAT,EAAa;MACTd,YAAY,CAACe,MAAb,CAAoBb,KAAK,CAACY,EAA1B,EAA+BJ,IAA/B;MACAE,OAAO,CAACC,GAAR,CAAa,WAAUH,IAAK,IAAGR,KAAK,CAACY,EAAG,EAAxC;MACAF,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACAM,UAAU,CAAE,MAAM;QAACC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;MAAyB,CAAlC,EAAoC,IAApC,CAAV;MACAR,KAAK,CAACS,MAAN,CAAaC,KAAb;IACH,CAND,MAMO;MACH;MACAlB,QAAQ,CAACT,UAAU,CAACgB,IAAI,CAACL,IAAN,CAAX,CAAR;MACAF,QAAQ,CAACR,WAAW,CAACe,IAAI,CAACY,KAAN,CAAZ,CAAR;MACAnB,QAAQ,CAACN,WAAW,CAACa,IAAI,CAACa,YAAN,CAAZ,CAAR;MACApB,QAAQ,CAACP,aAAa,CAACc,IAAI,CAACc,OAAN,CAAd,CAAR;MACAxB,YAAY,CAACyB,MAAb,CAAoBrB,KAAK,CAACsB,QAAN,EAApB;MACAV,UAAU,CAAE,MAAM;QAACC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;MAAyB,CAAlC,EAAoC,IAApC,CAAV;IACH;EACF,CAlBH;;EAmBE,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAIX,YAAY,CAACC,QAAD,CAA9B;MAAA,wBACI;QAAA,wBACI;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD,OAAWF,QAAQ,CAAC,MAAD,CAAnB;UAA6B,IAAI,EAAC,MAAlC;UAAyC,WAAW,EAAC;QAArD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAA,wBACI;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD,OAAWA,QAAQ,CAAC,OAAD,CAAnB;UAA8B,IAAI,EAAC,OAAnC;UAA2C,WAAW,EAAC;QAAvD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAA,wBACI;UAAO,OAAO,EAAC,cAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD,OAAWA,QAAQ,CAAC,cAAD,CAAnB;UAAqC,IAAI,EAAC,cAA1C;UAAyD,WAAW,EAAC;QAArE;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAaI;QAAA,wBACI;UAAO,OAAO,EAAC,SAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD,OAAWA,QAAQ,CAAC,SAAD,CAAnB;UAAgC,IAAI,EAAC,SAArC;UAA+C,WAAW,EAAC;QAA3D;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAbJ,eAiBI,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CAjDM;;GAAMN,W;UAEMX,W,EACHE,Q,EACDD,W,EACsBE,O;;;KALxBQ,W"},"metadata":{},"sourceType":"module"}