[{"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/index.tsx":"1","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/reportWebVitals.ts":"2","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/index.ts":"3","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Home/index.ts":"4","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Home/Home.tsx":"5","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Navbar/index.ts":"6","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Navbar/Navbar.tsx":"7","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Contact/index.ts":"8","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/About/index.ts":"9","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Phonebook/index.ts":"10","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/About/About.tsx":"11","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Contact/Contact.tsx":"12","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Phonebook/Phonebook.tsx":"13","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/redux/store.ts":"14","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/redux/slices/RootSlice.ts":"15","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/DataTable/index.ts":"16","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/ContactForm/index.ts":"17","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/DataTable/DataTable.tsx":"18","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/ContactForm/ContactForm.tsx":"19","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/SharedComponents/Input.tsx":"20","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/api/index.ts":"21","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/api/server.ts":"22","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/custom-hooks/index.ts":"23","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/custom-hooks/FetchData.tsx":"24","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/SignIn/index.ts":"25","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/SignIn/SignIn.tsx":"26","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/firebaseConfig.ts":"27"},{"size":1173,"mtime":1664489940055,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1664288793380,"results":"30","hashOfConfig":"29"},{"size":131,"mtime":1664489457462,"results":"31","hashOfConfig":"29"},{"size":22,"mtime":1664289327421,"results":"32","hashOfConfig":"29"},{"size":1325,"mtime":1664309862142,"results":"33","hashOfConfig":"29"},{"size":25,"mtime":1664303604009,"results":"34","hashOfConfig":"29"},{"size":2735,"mtime":1664494833222,"results":"35","hashOfConfig":"29"},{"size":25,"mtime":1664308738673,"results":"36","hashOfConfig":"29"},{"size":23,"mtime":1664308637246,"results":"37","hashOfConfig":"29"},{"size":27,"mtime":1664308970748,"results":"38","hashOfConfig":"29"},{"size":1435,"mtime":1664897739041,"results":"39","hashOfConfig":"29"},{"size":184,"mtime":1664309316381,"results":"40","hashOfConfig":"29"},{"size":8049,"mtime":1664482013485,"results":"41","hashOfConfig":"29"},{"size":169,"mtime":1664316460604,"results":"42","hashOfConfig":"29"},{"size":714,"mtime":1664316493697,"results":"43","hashOfConfig":"29"},{"size":27,"mtime":1664311563080,"results":"44","hashOfConfig":"29"},{"size":29,"mtime":1664315939610,"results":"45","hashOfConfig":"29"},{"size":2435,"mtime":1664481290365,"results":"46","hashOfConfig":"29"},{"size":2579,"mtime":1664480483387,"results":"47","hashOfConfig":"29"},{"size":412,"mtime":1664369086064,"results":"48","hashOfConfig":"29"},{"size":25,"mtime":1664311610425,"results":"49","hashOfConfig":"29"},{"size":1690,"mtime":1664839492217,"results":"50","hashOfConfig":"29"},{"size":27,"mtime":1664315846735,"results":"51","hashOfConfig":"29"},{"size":710,"mtime":1664315679977,"results":"52","hashOfConfig":"29"},{"size":24,"mtime":1664487506402,"results":"53","hashOfConfig":"29"},{"size":3557,"mtime":1664491053964,"results":"54","hashOfConfig":"29"},{"size":888,"mtime":1664487187595,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"v42db0",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/index.tsx",["118"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { FirebaseAppProvider, AuthCheck } from 'reactfire'; \nimport { Home, Contact, About, Phonebook, SignIn } from './components';\nimport './style.css';\nimport { firebaseConfig } from './firebaseConfig';\nimport 'firebase/auth';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nlet myTitle = \"Yoon's Phonebook\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <FirebaseAppProvider firebaseConfig={firebaseConfig} suspense={true}>\n  <Provider store={store}>\n    <Router>\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Home title={myTitle} />\n        </Route>\n        <Route path='/phonebook'>\n          <Phonebook></Phonebook>\n        </Route>\n        <Route path='/contact'>\n          <Contact></Contact>\n        </Route>\n        <Route path='/about'>\n          <About></About>\n        </Route>\n        <Route path='/signin'>\n          <SignIn></SignIn>\n        </Route>\n\n      </Switch>\n    </Router>\n  </Provider>\n  </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["119","120"],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/reportWebVitals.ts",[],["121","122"],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Home/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Home/Home.tsx",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Navbar/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Navbar/Navbar.tsx",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Contact/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/About/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Phonebook/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/About/About.tsx",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Contact/Contact.tsx",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/Phonebook/Phonebook.tsx",["123","124","125","126","127","128","129"],"import React, {useState}  from 'react'\nimport { useGetData } from '../../custom-hooks'\nimport { Link } from 'react-router-dom';\nimport {Paper} from '@material-ui/core';\nimport { Drawer as MUIDrawer, \n    ListItem, \n    List, \n    ListItemIcon, \n    ListItemText, \n    Theme,\n    useTheme, \n    makeStyles, \n    createStyles,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Divider,\n    Button,\n    Dialog, \n    DialogActions, \n    DialogContent,\n    DialogContentText, \n    DialogTitle  ,\n} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport clsx from 'clsx';\nimport { RouteComponentProps, withRouter, Switch, Route } from \"react-router-dom\";\nimport { DataTable } from '../../components/DataTable';\nimport { ContactForm } from '../ContactForm'\n\ninterface PhonebookProps{\n  history: RouteComponentProps[\"history\"];\n  location: RouteComponentProps[\"location\"];\n  match: RouteComponentProps[\"match\"];\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  main: {\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))`,\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n  },\n  h3: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'black',\n  },\n  text: {\n      display: 'flex',\n      flexDirection: 'column',\n      color: '#4ef3b4',\n      textDecoration: 'none',\n      backgroundColor: 'white',\n      width: '60%',\n      justifyContent: 'center',\n      alignItems: 'center',\n  },\n  logo:{\n      margin: '0 0 0 0.45em',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n  },\n  logo_a: {\n      color: '#4ef3b4',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n  },\n  logo_navigation: {\n      listStyle: 'none',\n      textTransform: 'uppercase',\n      textDecoration: 'none',\n  },\n  root: {\n    display: 'flex',\n  },\n  column: {\n      display: 'flex',\n      flexDirection: 'column',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbar:{\n    display: 'flex',\n    backgroundColor: '#003155',\n    color: 'white',\n    fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n  },\n  toolbar_button: {\n    marginLeft: 'auto',\n    color: 'white',\n    fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n  },\n  margin_top: {\n      marginTop: '50px',\n  },\n  font: {\n      fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n  },\n  leftMargin: {\n      marginLeft: '240px',\n  },\n}))\n\n\nexport const Phonebook = withRouter(( props:PhonebookProps ) => {\n  console.log(props);\n  const { history } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  };\n  const handleDialogClickOpen = () => {\n    setDialogOpen(true)\n  };\n\n  const handleDialogClickClose = () => {\n      setDialogOpen(false)\n  };\n\n  const itemsList = [\n    {\n        text: 'Home',\n        onClick: () => history.push('/')\n    },\n    {\n        text: 'Sign In',\n        onClick: () => history.push('/signin')\n    },\n    {\n        text: 'About',\n        onClick: () => history.push('/about')\n    },\n    {\n        text: 'Contact',\n        onClick: () => history.push('/contact')\n    },\n  ];\n  return (\n    <div className={`${classes.root} ${classes.column}`}>\n        <CssBaseline /> {/* This is just a normal part of complex MUI; see docs */}\n        <AppBar position=\"fixed\" className={clsx(classes.appBar, {[classes.appBarShift]: open })}> {/* We are using MUI to make another navbar */}\n            <Toolbar className={classes.toolbar}>\n                <IconButton color=\"inherit\" aria-label=\"open-drawer\" onClick={handleDrawerOpen} edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.font} noWrap>\n                    My Phonebook\n                </Typography>\n                <Button className={classes.toolbar_button} onClick={handleDialogClickOpen}>Create New Contact</Button>\n\n                {/* Dialog Pop Up */}\n                <Dialog open={dialogOpen} onClose={handleDialogClickClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Add New Contact</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText></DialogContentText>\n                        <ContactForm />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleDialogClickClose} color=\"primary\">Cancel</Button>\n                        <Button onClick={handleDialogClickOpen} color=\"primary\">Done</Button>\n                    </DialogActions>\n                </Dialog>\n                {/* End dialog pop-up */}\n            </Toolbar>\n        </AppBar>\n        <MUIDrawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: classes.drawerPaper,}}>\n            <div className={classes.drawerHeader}>\n                <IconButton onClick={handleDrawerClose}>\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                </IconButton>\n            </div>\n            <Divider /> {/* A fun educational game is to comment elements out while the compiler is running and see what disappears or breaks */}\n            <List>\n                {itemsList.map((item, index) => { {/* don't get lost here, it's just a map function looping over our itemsList array! */}\n                    const { text, onClick } = item;\n                    return (\n                        <ListItem button key={text} onClick={onClick}>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </MUIDrawer>\n        <main className={`${clsx(classes.content, {[classes.contentShift]: open,})} ${classes.leftMargin}`}>\n            <div className={classes.drawerHeader} />\n                <DataTable />  \n        </main>\n    </div>\n)\n});\n","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/redux/store.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/redux/slices/RootSlice.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/DataTable/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/ContactForm/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/DataTable/DataTable.tsx",["130","131"],"import React, { useState } from 'react';\nimport { DataGrid, GridColDef } from '@material-ui/data-grid';\nimport { useGetData } from '../../custom-hooks';\nimport { server_calls } from '../../api';\nimport { Button, Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle } from '@material-ui/core';\nimport { ContactForm } from '../ContactForm';\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 90, hide: true },\n  { field: 'name', headerName: 'Contact Name', flex: 1 },\n  { field: 'email', headerName: 'Email', flex: 1 },\n  { field: 'phone_number', headerName: 'Phone Number', flex: 1 },\n  { field: 'address', headerName: 'Address', flex: 2 },\n];\n\ninterface gridData {\n  data: {\n      id?:string\n  }\n}\n\nexport const DataTable = () => {\n\n  let { contactData, getData } = useGetData();\n  let [open, setOpen] = useState(false);\n  let [gridData, setData] = useState<gridData>({data:{}});\n  const [selectionModel, setSelectionModel] = useState<any>([]);\n  \n\n  let handleOpen = () => {\n      setOpen(true)\n  };\n  let handleClose = () => {\n      setOpen(false)\n  };\n\n  let deleteData = () => {\n      server_calls.delete(selectionModel);\n      // console.log(gridData.data.id);\n      getData();\n      setTimeout( () => { window.location.reload(); }, 1000)\n  }\n\n  // console.log(gridData.data.id!);\n  // console.log(`testing for data ${contactData}`)\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n        <h2>My Contacts</h2>\n\n    <DataGrid rows={ contactData } columns={ columns } pageSize={ 5 } checkboxSelection={true} \n    onSelectionModelChange={ (item) => {\n        setSelectionModel(item)\n        // console.log(item)\n      }}\n    />\n\n    <Button onClick={handleOpen}>Update</Button>\n    <Button variant=\"contained\" color=\"secondary\" onClick={deleteData}>Delete</Button>\n\n    {/* Dialog pop-up */}\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Update Contact {selectionModel}</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Update Contact</DialogContentText>\n                <ContactForm id={selectionModel!}/>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">Cancel</Button>\n            <Button onClick={handleClose} color=\"primary\">Done</Button>\n        </DialogActions>\n    </Dialog>\n        \n    </div>\n)\n}","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/ContactForm/ContactForm.tsx",["132"],"import React from 'react'\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { chooseName, chooseEmail, chooseAddress, choosePhone } from '../../redux/slices/RootSlice';\nimport { Input } from '../SharedComponents/Input';\nimport { Button } from '@material-ui/core';\n\nimport { server_calls } from '../../api';\n\ninterface ContactFormProps {\n    id?:string;\n    data?:{}\n}\n\ninterface ContactState {\n    name: string;\n    email: string;\n    address: string;\n    phone_number: string;\n}\n\nexport const ContactForm = (props:ContactFormProps) => {\n\n  const dispatch = useDispatch(); // This is a Redux-specific hook that updates the store\n  const store = useStore();\n  const name = useSelector<ContactState>(state => state.name);\n  const { register, handleSubmit } = useForm({ })\n\n  const onSubmit = (data:any, event:any) => {\n      console.log(props.id)\n      // The ! is for strictly typed Typescript stuff\n      if(props.id!){\n          server_calls.update(props.id!, data);\n          console.log(`Updated:${data} ${props.id}`);\n          console.log(data);\n          setTimeout( () => {window.location.reload()}, 1000);\n          event.target.reset();\n      } else {\n          // Dispatch basically updates our state / Redux store\n          dispatch(chooseName(data.name));\n          dispatch(chooseEmail(data.email));\n          dispatch(choosePhone(data.phone_number));\n          dispatch(chooseAddress(data.address));\n          server_calls.create(store.getState());\n          setTimeout( () => {window.location.reload()}, 1000)\n      }\n    }\n    return (\n        <div>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n                <div>\n                    <label htmlFor=\"name\">Contact Name</label>\n                    <Input {...register('name')} name=\"name\" placeholder='Name'/>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <Input {...register('email')} name=\"email\" placeholder='Email'/>\n                </div>\n                <div>\n                    <label htmlFor=\"phone_number\">Phone Number</label>\n                    <Input {...register('phone_number')} name=\"phone_number\" placeholder='Phone Number'/>\n                </div>\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <Input {...register('address')} name=\"address\" placeholder='Address'/>\n                </div>\n                <Button type='submit'>Submit</Button>\n            </form>\n        </div>\n    )\n}","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/SharedComponents/Input.tsx",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/api/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/api/server.ts",["133","134"],"let token = 'e380ea9d868f0e5a0d484aa743c5532200415729e86b10f1';\n\nexport const server_calls = {\n    get: async () => {\n        const response = await fetch(`https://phonebookv3.herokuapp.com/api/contacts`,{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n        });\n\n        if (!response.ok){\n            throw new Error('Failed to fetch data from server')\n        }\n\n        return await response.json()\n    },\n    create: async(data: any = {}) => {\n        const response = await fetch(`https://phonebookv3.herokuapp.com/api/contacts`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if(!response.ok){\n            throw new Error('Failed to Create new data on server')\n        }\n\n        return await response.json()\n\t},\n    update: async (id:string, data:any = {}) => {\n        const response = await fetch(`https://phonebookv3.herokuapp.com/api/contacts/${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n    },\n    delete: async(id:string) => {\n    const response = await fetch(`https://phonebookv3.herokuapp.com/api/contacts/${id}`,{\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'x-access-token': `Bearer ${token}`\n        }\n    })\n    }\n}\n","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/custom-hooks/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/custom-hooks/FetchData.tsx",["135"],"import React, { useState, useEffect } from 'react';\nimport { server_calls } from '../api'\n\nexport const useGetData = () => {\n\t\t// Syntax: const [stateName, saveStateFunction] = importedHook<requiredDataType>(value passed in);\n    const [contactData, setData] = useState<[]>([]);\n\n\t\t// This is a function that will get the data\n    async function handleDataFetch(){\n        const result = await server_calls.get();\n        setData(result)\n    }\n\n\t\t// This is the actual call of the function handleDataFetch, \n    // where the data is actually acquired\n    useEffect( () => {\n        handleDataFetch();\n    }, [])\n\t\t\t\t// We return the data that we've saved\n        return {contactData, getData:handleDataFetch}\n}","/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/SignIn/index.ts",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/components/SignIn/SignIn.tsx",[],"/Users/yoonhwajeong/Documents/codingtemple/react/react-phonebook/react-phonebook-codealong/src/firebaseConfig.ts",[],{"ruleId":"136","severity":1,"message":"137","line":4,"column":31,"nodeType":"138","messageId":"139","endLine":4,"endColumn":40},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"136","severity":1,"message":"146","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":20},{"ruleId":"136","severity":1,"message":"147","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":14},{"ruleId":"136","severity":1,"message":"148","line":4,"column":9,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"136","severity":1,"message":"149","line":8,"column":5,"nodeType":"138","messageId":"139","endLine":8,"endColumn":17},{"ruleId":"136","severity":1,"message":"150","line":31,"column":43,"nodeType":"138","messageId":"139","endLine":31,"endColumn":49},{"ruleId":"136","severity":1,"message":"151","line":31,"column":51,"nodeType":"138","messageId":"139","endLine":31,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":250,"column":51,"nodeType":"154","messageId":"155","endLine":250,"endColumn":138},{"ruleId":"136","severity":1,"message":"156","line":30,"column":8,"nodeType":"138","messageId":"139","endLine":30,"endColumn":16},{"ruleId":"136","severity":1,"message":"157","line":30,"column":18,"nodeType":"138","messageId":"139","endLine":30,"endColumn":25},{"ruleId":"136","severity":1,"message":"158","line":26,"column":9,"nodeType":"138","messageId":"139","endLine":26,"endColumn":13},{"ruleId":"136","severity":1,"message":"159","line":36,"column":15,"nodeType":"138","messageId":"139","endLine":36,"endColumn":23},{"ruleId":"136","severity":1,"message":"159","line":46,"column":11,"nodeType":"138","messageId":"139","endLine":46,"endColumn":19},{"ruleId":"136","severity":1,"message":"160","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'AuthCheck' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"'useGetData' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'ListItemIcon' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'gridData' is assigned a value but never used.","'setData' is assigned a value but never used.","'name' is assigned a value but never used.","'response' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]